OCAMLBUILD=@OCAMLBUILD@ -classic-display 

# Enable debug output for sections
export STATIC_CAMLP4_DEBUG=@static_camlp4_debug@

# Check if git is installed and use output of git describe as version
# number, else use version number from configure
GIT_DESCRIBE=$(shell command -v git > /dev/null && git describe --tags || echo "@PACKAGE_VERSION@")

kind2: version.ml kind2Config.ml flags.ml myocamlbuild.ml _build/Camlp4DebugParser.cmxs
	$(OCAMLBUILD) kind2.native

kind2-top: kind2Config.ml flags.ml myocamlbuild.ml _build/Camlp4DebugParser.cmxs
	$(OCAMLBUILD) kind2.top

kind2-prof: kind2Config.ml flags.ml myocamlbuild.ml _build/Camlp4DebugParser.cmxs
	$(OCAMLBUILD) -tag profile kind2.native

kind-bmc: kind2Config.ml flags.ml myocamlbuild.ml _build/Camlp4DebugParser.cmxs
	$(OCAMLBUILD) bmc.native

lustre-checker: kind2Config.ml flags.ml myocamlbuild.ml _build/Camlp4DebugParser.cmxs
	$(OCAMLBUILD) lustreChecker.native

clean:
	$(OCAMLBUILD) -clean

kind2-doc: myocamlbuild.ml _build/Camlp4DebugParser.cmxs
	$(OCAMLBUILD) kind2.docdir/index.html

# Compile a native-code version of Camlp4DebugParser, the
# Debian/Ubuntu package does not contain a .cmxs file 
# (from http://mancoosi.org/~abate/two-simple-tips-speed-ocaml-compilation)
_build/Camlp4DebugParser.cmxs:
	$(OCAMLBUILD) Camlp4DebugParser.cmxs
# $(OCAMLOPT) -shared -I `$(OCAMLOPT) -where`/camlp4 -pp camlp4rf dynlink.cmxa camlp4lib.cmxa Camlp4DebugParser.cmx -o Camlp4DebugParser.cmxs

.PHONY: version.ml

# Substitute configured version number 
version.ml: version.ml.in
	sed s/%%%GIT_DESCRIBE%%%/$(GIT_DESCRIBE)/ < version.ml.in > version.ml


# Remake this Makefile if configuration has changed 
Makefile: Makefile.in ../config.status
	cd .. && ./config.status

flags.ml: flags.ml.in ../config.status
	cd .. && ./config.status

kind2Config.ml: kind2Config.ml.in ../config.status
	cd .. && ./config.status

myocamlbuild.ml.in: myocamlbuild.ml.in ../config.status
	cd .. && ./config.status

../config.status: ../configure
	cd .. && ./config.status --recheck

